package strategy

import (
	"github.com/tinychameleon/blocky/shape"
	"github.com/tinychameleon/blocky/testdata"
	"image/color"
	"testing"
)

func TestPixelForPixel(t *testing.T) {
	m := testdata.Image()
	got := PixelForPixel(m)
	if len(got) != len(pixels) {
		t.Errorf("Got len %v, want %v", len(got), len(pixels))
	}
	for i, p := range pixels {
		if got[i] != p {
			t.Errorf("Index %v: got %#v, want %#v", i, got[i], p)
		}
	}
}

var pixels = []shape.Interface{
	shape.Pixel(0, 0, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(1, 0, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(2, 0, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(3, 0, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(4, 0, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(5, 0, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(6, 0, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(7, 0, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(8, 0, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(0, 1, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(1, 1, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(2, 1, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(3, 1, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(4, 1, color.NRGBA{0x9b, 0x3b, 0xe1, 0xff}),
	shape.Pixel(5, 1, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(6, 1, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(7, 1, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(8, 1, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(0, 2, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(1, 2, color.NRGBA{0x0, 0x0, 0x0, 0x0}),
	shape.Pixel(2, 2, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(3, 2, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(4, 2, color.NRGBA{0x9b, 0x3b, 0xe1, 0xff}),
	shape.Pixel(5, 2, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(6, 2, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(7, 2, color.NRGBA{0x0, 0x0, 0x0, 0x0}),
	shape.Pixel(8, 2, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(0, 3, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(1, 3, color.NRGBA{0x0, 0x0, 0x0, 0x0}),
	shape.Pixel(2, 3, color.NRGBA{0x0, 0x0, 0x0, 0x0}),
	shape.Pixel(3, 3, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(4, 3, color.NRGBA{0x9b, 0x3b, 0xe1, 0xff}),
	shape.Pixel(5, 3, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(6, 3, color.NRGBA{0x0, 0x0, 0x0, 0x0}),
	shape.Pixel(7, 3, color.NRGBA{0x0, 0x0, 0x0, 0x0}),
	shape.Pixel(8, 3, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(0, 4, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(1, 4, color.NRGBA{0x9b, 0x3b, 0xe1, 0xff}),
	shape.Pixel(2, 4, color.NRGBA{0x9b, 0x3b, 0xe1, 0xff}),
	shape.Pixel(3, 4, color.NRGBA{0x9b, 0x3b, 0xe1, 0xff}),
	shape.Pixel(4, 4, color.NRGBA{0x9b, 0x3b, 0xe1, 0xff}),
	shape.Pixel(5, 4, color.NRGBA{0x9b, 0x3b, 0xe1, 0xff}),
	shape.Pixel(6, 4, color.NRGBA{0x9b, 0x3b, 0xe1, 0xff}),
	shape.Pixel(7, 4, color.NRGBA{0x9b, 0x3b, 0xe1, 0xff}),
	shape.Pixel(8, 4, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(0, 5, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(1, 5, color.NRGBA{0x0, 0x0, 0x0, 0x0}),
	shape.Pixel(2, 5, color.NRGBA{0x0, 0x0, 0x0, 0x0}),
	shape.Pixel(3, 5, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(4, 5, color.NRGBA{0x9b, 0x3b, 0xe1, 0xff}),
	shape.Pixel(5, 5, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(6, 5, color.NRGBA{0x0, 0x0, 0x0, 0x0}),
	shape.Pixel(7, 5, color.NRGBA{0x0, 0x0, 0x0, 0x0}),
	shape.Pixel(8, 5, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(0, 6, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(1, 6, color.NRGBA{0x0, 0x0, 0x0, 0x0}),
	shape.Pixel(2, 6, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(3, 6, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(4, 6, color.NRGBA{0x9b, 0x3b, 0xe1, 0xff}),
	shape.Pixel(5, 6, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(6, 6, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(7, 6, color.NRGBA{0x0, 0x0, 0x0, 0x0}),
	shape.Pixel(8, 6, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(0, 7, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(1, 7, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(2, 7, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(3, 7, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(4, 7, color.NRGBA{0x9b, 0x3b, 0xe1, 0xff}),
	shape.Pixel(5, 7, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(6, 7, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(7, 7, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(8, 7, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(0, 8, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
	shape.Pixel(1, 8, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(2, 8, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(3, 8, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(4, 8, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(5, 8, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(6, 8, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(7, 8, color.NRGBA{0x3b, 0x9e, 0xe1, 0xff}),
	shape.Pixel(8, 8, color.NRGBA{0xe1, 0x3b, 0x3b, 0xff}),
}
